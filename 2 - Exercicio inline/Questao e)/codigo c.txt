#include <stdio.h>

short int a = 0x1234;
short int b = 0xABCD;
unsigned char c = 8;
int d;

int main(void) {
    __asm__ volatile (
".intel_syntax noprefix           \n"
"mov ax, WORD PTR [a]             \n"
"mov bl, al                       \n"
"and bl, 0x0F                     \n"
"mov cl, bl                       \n"
"shr cl, 3                        \n"
"and cl, 1                        \n"
"shl cl, 2                        \n"
"mov dl, bl                       \n"
"shr dl, 1                        \n"
"and dl, 1                        \n"
"mov ch, 2                        \n"
"or cl, ch                        \n"
"or cl, dl                        \n"
"movzx eax, cl                    \n"
"mov bl, al                       \n"
"shr bl, 4                        \n"
"and bl, 0x0F                     \n"
"mov cl, bl                       \n"
"shr cl, 3                        \n"
"and cl, 1                        \n"
"shl cl, 2                        \n"
"mov dl, bl                       \n"
"shr dl, 1                        \n"
"and dl, 1                        \n"
"mov ch, 2                        \n"
"or cl, ch                        \n"
"or cl, dl                        \n"
"movzx edx, cl                    \n"
"shl edx, 4                       \n"
"or eax, edx                     \n"
"mov bl, ah                       \n"
"and bl, 0x0F                     \n"
"mov cl, bl                       \n"
"shr cl, 3                        \n"
"and cl, 1                        \n"
"shl cl, 2                        \n"
"mov dl, bl                       \n"
"shr dl, 1                        \n"
"and dl, 1                        \n"
"mov ch, 2                        \n"
"or cl, ch                        \n"
"or cl, dl                        \n"
"movzx edx, cl                    \n"
"shl edx, 8                       \n"
"or eax, edx                     \n"
"mov bl, ah                       \n"
"shr bl, 4                        \n"
"and bl, 0x0F                     \n"
"mov cl, bl                       \n"
"shr cl, 3                        \n"
"and cl, 1                        \n"
"shl cl, 2                        \n"
"mov dl, bl                       \n"
"shr dl, 1                        \n"
"and dl, 1                        \n"
"mov ch, 2                        \n"
"or cl, ch                        \n"
"or cl, dl                        \n"
"movzx edx, cl                    \n"
"shl edx, 12                      \n"
"or eax, edx                     \n"
"mov bx, WORD PTR [b]             \n"
"and bx, 0x0FF0                   \n"
"or bx, 0x000F                    \n"
"movzx edx, bx                    \n"
"add eax, edx                     \n"
"mov edi, eax                     \n"
"movzx eax, BYTE PTR [c]          \n"
"bsf ecx, eax                     \n"
"mov eax, edi                     \n"
"sar eax, cl                     \n"
"mov DWORD PTR [d], eax           \n"
".att_syntax prefix               \n"
    :
    :
    : "eax","ebx","ecx","edx","edi","ax","bx","dx","memory"
    );
    printf("d = %d\n", d);
    return 0;
}
